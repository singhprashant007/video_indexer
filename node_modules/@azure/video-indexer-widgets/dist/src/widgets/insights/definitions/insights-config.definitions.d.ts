import { IWidgetBaseConfig, IWidgetStyle } from '../../base-widget-config.definitions';
import { Language } from '../../languages.definitions';
import { IInsightsStyleConfig } from './insights-style-config.definitions';
/**
 * Insights config, contains basic configurations for insights widget.
 */
export interface IInsightsConfig extends IWidgetBaseConfig {
    /**
     * Controls the Insights tab that's rendered by default.
     */
    tab?: Tab;
    /**
     * Allows you to control the insights that you want to render.
     */
    components?: ComponentsParamOption[];
    /**
     * Controls the preset that is selected.
     */
    preset?: PresetType;
    /**
     *  Controls insights language.
     */
    language?: Language;
    /**
     * Allows you to control the controls that you want to render.
     */
    controls?: ControlsParamOption[];
    /**
     * Controls the initial search term
     */
    search?: string;
    /**
     * Controls sortable components option
     */
    sort?: ISortedComponent;
    /**
     * Controls widget style
     */
    style?: IInsightsStyle;
}
export type InsightsSortedProperty = 'startTime' | 'endTime' | 'seenDuration' | 'name' | 'id';
export type InsightsSortedOrder = 'asc' | 'desc';
export interface IInsightsSortedBy {
    property: InsightsSortedProperty;
    order: InsightsSortedOrder;
}
export type ISortedComponent = {
    [key in SortableInsightsComponents]?: IInsightsSortedBy;
};
export type Tab = 'insights' | 'timeline';
export type SortableInsightsComponents = 'keywords' | 'audioEffects' | 'labels' | 'sentiments' | 'emotions' | 'keyframes' | 'scenes' | 'namedEntities' | 'spokenLanguage';
export type NonSortableInsightsComponents = 'people' | 'animatedCharacters' | 'topics' | 'shots' | 'speakers' | 'transcript' | 'ocr' | 'observedPeople';
export type ComponentsParamOption = SortableInsightsComponents | NonSortableInsightsComponents;
export type PresetType = 'all' | 'storyboard' | 'accessibility' | 'captioning' | 'monitoring';
export type ControlsParamOption = 'search' | 'download' | 'presets' | 'language';
/**
 * Controls widget styling
 */
export interface IInsightsStyle extends IWidgetStyle {
    /**
     * Custom styling configuration
     */
    customStyle?: IInsightsStyleConfig;
}
export type AccountLocation = 'trial' | 'eastus' | 'westus2' | 'eastasia' | 'northeurope' | 'westeurope' | 'southeastasia' | 'eastus2' | 'australiaeast' | 'southcentralus' | 'japaneast' | 'uksouth' | 'switzerlandnorth' | 'switzerlandwest' | 'centralindia' | 'canadacentral' | 'westus' | 'northcentralus' | 'koreacentral' | 'brazilsouth' | 'japanwest' | 'westcentralus' | 'francecentral' | 'centralus';
